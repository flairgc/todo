DROP TABLE IF EXISTS users CASCADE;

-- оставлять ли id? пока думаю да, так как для регистации может не потребуется логин, например если есть email или аторизация через сторонний сервис (Яндекс, телеграм)
CREATE TABLE users (
	id int GENERATED BY default AS IDENTITY NOT NULL,
	login text NOT NULL,
	pass text NOT NULL,
	salt text NOT NULL,
	password_hint text NULL,
	name text NULL,
	email text NULL,
	created_at timestamp DEFAULT now() NOT NULL,
	updated_at timestamp DEFAULT now() NOT NULL,
	active boolean DEFAULT true NOT NULL,
	CONSTRAINT user_pk PRIMARY KEY (id),
	CONSTRAINT user_login_unique UNIQUE (login)
);
CREATE INDEX idx_users_id ON users(id);
CREATE INDEX idx_users_login ON users(login);


DROP TABLE IF EXISTS sessions;

CREATE TABLE sessions (
    user_id int NOT NULL,
	access_token text NOT NULL,
	refresh_token text NOT NULL,
	created_at timestamp DEFAULT now() NOT NULL,
	expire_access_at timestamp NOT NULL,
	expire_refresh_at timestamp NOT NULL,
	device text NULL,
	user_ip text NULL,
	CONSTRAINT sessions_access_unique UNIQUE (access_token),
	CONSTRAINT sessions_refresh_unique UNIQUE (refresh_token),
	CONSTRAINT sessions_users_fk FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE SET DEFAULT ON UPDATE SET DEFAULT
);
--CREATE unique INDEX sessions_access_idx ON sessions USING btree (access_token);
--CREATE unique INDEX sessions_refresh_idx ON sessions USING btree (refresh_token);
CREATE INDEX sessions_user_id_idx ON sessions USING btree (user_id);


DROP TABLE IF EXISTS tasks CASCADE;

CREATE TABLE tasks (
    id SERIAL PRIMARY KEY,
    user_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    title TEXT NOT NULL,
    description TEXT,
    status TEXT NOT NULL DEFAULT 'not-done',  -- values: done, not-done
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE INDEX idx_user_id ON tasks(user_id);

